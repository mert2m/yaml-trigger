name: Image Update Detection

on:
  push:
    branches:
      - main
      - prod
    paths:
      - '**/*.yaml'

jobs:
  detect-image-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Fetch all branches
        run: |
          git fetch --all

      - name: Check for image changes
        id: check-changes
        run: |
          echo "Starting image change detection..."

          # prod ve main branch'lerinin merge base commit'lerini kullanarak farkları bul
          CHANGED_FILES=$(git diff --name-only $(git merge-base origin/prod HEAD) HEAD | grep -E 'k8s/(prod|stg)/.+\.yaml$' || true)
          CHANGED_FILES_MAIN=$(git diff --name-only $(git merge-base origin/main HEAD) HEAD | grep -E 'k8s/(prod|stg)/.+\.yaml$' || true)

          # İki branch'in değişen dosyalarını birleştir
          CHANGED_FILES=$(echo -e "$CHANGED_FILES\n$CHANGED_FILES_MAIN" | sort -u)

          echo "Changed YAML files:"
          echo "$CHANGED_FILES"

          IMAGE_CHANGED=false
          for file in $CHANGED_FILES; do
            echo "Checking file: $file"

            # Diff içindeki +image satırlarını bulmak için doğru pattern'i kullan
            if git diff $(git merge-base origin/prod HEAD) HEAD "$file" | grep -E '^\+.*image:[[:space:]]*[^[:space:]]+' > /dev/null; then
              echo "✅ Image change detected in $file"
              IMAGE_CHANGED=true
              echo "changed_file=$file" >> $GITHUB_OUTPUT
            else
              echo "❌ No image change in $file"
            fi
          done

          echo "Final result - Image changed: $IMAGE_CHANGED"
          echo "has_image_changes=$IMAGE_CHANGED" >> $GITHUB_OUTPUT

      - name: Run trigger script
        if: steps.check-changes.outputs.has_image_changes == 'true'
        run: |
          echo "Image changes detected, running trigger.sh..."
          chmod +x ./trigger.sh
          ./trigger.sh
